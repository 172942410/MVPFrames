apply plugin: 'com.android.application'

apply plugin: 'com.neenbedankt.android-apt'

// 配置Android构建参数
android {
    // 编译SDK版本
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    // Build Tools版本
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        // 包名
        applicationId "com.frame.mvp"
        // 最低支持SDK版本
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        // 目标SDK版本
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        // 版本
        versionCode rootProject.ext.android["versionCode"]
        // 版本号
        versionName rootProject.ext.android["versionName"]

        // 单元测试
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            // 是否进行混淆
            minifyEnabled false
            // 移除无用资源 如发生Resources$NotFoundException: Resource ID #0x4 错误可关闭此功能
            shrinkResources false
            // 混淆文件位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 移除lint检查的error，可以避免由于编译条件太过严格而编译不过的问题
    lintOptions {
        // InvalidPackage: Package not included in Android
        disable 'InvalidPackage'
        // Expected resource of type color [ResourceType] 资源类型错误
        disable "ResourceType"
        // 忽略因MissingTranslation导致Build Failed错误 "app_name" is not translated in "zh" (Chinese)
        disable 'MissingTranslation'

        abortOnError false
    }

    // 多渠道打包
    productFlavors {

    }
}

buildscript {

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

dependencies {
    // 编译libs目录下的所有jar包
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile rootProject.ext.dependencies["junit"]

    compile rootProject.ext.dependencies["appcompat-v7"]

    compile rootProject.ext.dependencies["butterknife"]
    apt rootProject.ext.dependencies["butterknife-compiler"]

    // 引入框架基础共通模块
    compile project(':Common')
}
