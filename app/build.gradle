apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'org.greenrobot.greendao'

// 配置Android构建参数
android {
    // 编译SDK版本
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    // Build Tools版本
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        // 包名
        applicationId "com.frame.mvp"
        // 最低支持SDK版本
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        // 目标SDK版本
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        // 版本
        versionCode rootProject.ext.android["versionCode"]
        // 版本号
        versionName rootProject.ext.android["versionName"]

        // 单元测试
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
    }

//    sourceSets {
//        main {
//            res.srcDirs =
//                    [
//                            'src/main/res/layouts/activity',
//                            'src/main/res/layouts/dialog',
//                            'src/main/res/layouts/fragment',
//                            'src/main/res/layouts/item',
//                            'src/main/res/layouts',
//                            'src/main/res'
//                    ]
//        }
//    }

    // Java版本配置
    compileOptions {

    }

    // 移除lint检查的error，可以避免由于编译条件太过严格而编译不过的问题
    lintOptions {
        // InvalidPackage: Package not included in Android
        disable 'InvalidPackage'
        // Expected resource of type color [ResourceType] 资源类型错误
        disable "ResourceType"
        // 忽略因MissingTranslation导致Build Failed错误 "app_name" is not translated in "zh" (Chinese)
        disable 'MissingTranslation'

        abortOnError false
    }

    dexOptions {
        // 优化编译效率
        incremental true
    }

    // 签名
    signingConfigs {
        debug {
            v2SigningEnabled false
        }
        release {
            // storeFile file("../Project-Frame-MVP/APP/keystore/mvp.keystore")
            // storePassword ""
            // keyAlias ""
            // keyPassword ""
            // 禁用v2签名增强模式
            v2SigningEnabled false
        }
    }

    // 多渠道打包
    productFlavors {

//        // 阿里应用分发平台
//        alibaba {
//
//        }
//        // 应用宝
//        yingyongbao {
//
//        }
//        // 360
//        qihoo360 {
//
//        }
//        // 小米
//        xiaomi {
//
//        }
//        // 华为
//        huawei {
//
//        }
    }

    buildTypes {
        debug {

        }
        release {
            // 是否支持ZIP
            zipAlignEnabled true
            // 是否支持调试
            debuggable false
            // 是否支持jni调试
            jniDebuggable false
            // 是否进行混淆
            minifyEnabled false
            // 移除无用资源 如发生Resources$NotFoundException: Resource ID #0x4 错误可关闭此功能
            shrinkResources false
            // 混淆文件位置，其中proguard-android.txt为默认的混淆配置，proguard-rules.pro为模块额外的混淆配置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 签名
            signingConfig signingConfigs.release

            // 批量打包
//            applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    def outputFile = output.outputFile
//                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        // 输出名称为：渠道名_版本号.apk
//                        def fileName = "App_${variant.productFlavors[0].name}_v${defaultConfig.versionName}.apk"
//                        output.outputFile = new File(outputFile.parent, fileName)
//                    }
//                }
//            }
        }
    }

    greendao {
        schemaVersion 1 // 数据库版本号
//        daoPackage 'com.tool.common.db'// 设置DaoMaster、DaoSession、Dao包名
//        targetGenDir 'src/main/java'// 设置DaoMaster、DaoSession、Dao目录
        //targetGenDirTest：设置生成单元测试目录
        //generateTests：设置自动生成单元测试用例
    }
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

}

dependencies {
    // 本地库依赖，包含app/libs目录下的所有jar文件。因此当module想引用某个jar时，只需将jar拷贝到<moduleName>/libs
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile rootProject.ext.dependencies["junit"]

    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["butterknife"]
    apt rootProject.ext.dependencies["butterknife-compiler"]

    provided rootProject.ext.dependencies["javax.annotation"]

    apt rootProject.ext.dependencies["dagger2-apt-compiler"]

    compile rootProject.ext.dependencies["greendao"]

    // 引入框架基础共通模块
    compile project(':Common')
}