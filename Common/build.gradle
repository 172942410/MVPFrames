apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.jakewharton.butterknife'

// Start 以下这段功能是用来上传至代码库，其他项目不用复制这段代码
apply plugin: 'com.novoda.bintray-release'

def libraryVersionCode = 6
def libraryVersionName = '1.0.51'

publish {
    userOrg = 'chinarocky'// 这是代码仓库的账号
    groupId = 'com.tool.common'// 包名
    artifactId = 'MVPFrames'// 项目名
    publishVersion = libraryVersionName// 版本号
    desc = 'Android MVP development framework'
    website = 'https://github.com/DesignQu/'
}
// End 以上这段功能是用来上传至代码库

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode libraryVersionCode
        versionName libraryVersionName

        renderscriptTargetApi rootProject.ext.android["renderscriptTargetApi"]
        renderscriptSupportModeEnabled rootProject.ext.android["renderscriptSupportModeEnabled"]
    }

    // 移除lint检查的error，可以避免由于编译条件太过严格而编译不过的问题
    lintOptions {
        // InvalidPackage: Package not included in Android
        disable 'InvalidPackage'
        // Expected resource of type color [ResourceType] 资源类型错误
        disable "ResourceType"
        // 忽略因MissingTranslation导致Build Failed错误 "app_name" is not translated in "zh" (Chinese)
        disable 'MissingTranslation'

        abortOnError false
        checkReleaseBuilds false
    }

    dexOptions {
        preDexLibraries = false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    // Support
    compile (rootProject.ext.dependencies["support-v4"]){
        exclude module: 'support-annotations'
    }
    compile (rootProject.ext.dependencies["appcompat-v7"]){
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    compile (rootProject.ext.dependencies["cardview-v7"]){
        exclude module: 'support-annotations'
    }
    compile (rootProject.ext.dependencies["design"]){
        exclude module: 'support-annotations'
    }
    compile rootProject.ext.dependencies["annotations"]

    // Network
    compile (rootProject.ext.dependencies["retrofit"]){
        exclude module: 'okhttp'
    }
    compile (rootProject.ext.dependencies["retrofit-converter-gson"]){
        exclude module: 'gson'
    }
    compile rootProject.ext.dependencies["okhttp3"]
    compile rootProject.ext.dependencies["okhttp3-logging-interceptor"]
    compile rootProject.ext.dependencies["okhttp-urlconnection"]
    compile rootProject.ext.dependencies["okio"]
    // Image
    compile rootProject.ext.dependencies["glide"]
    // Tools
    compile rootProject.ext.dependencies["butterknife"]
    apt rootProject.ext.dependencies["butterknife-compiler"]
    compile rootProject.ext.dependencies["dagger2"]
    apt rootProject.ext.dependencies["dagger2-apt-compiler"]
    provided rootProject.ext.dependencies["javax.annotation"]
    compile rootProject.ext.dependencies["eventbus"]
    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["easypermissions"]
    // DB
    compile rootProject.ext.dependencies["greendao"]
    compile rootProject.ext.dependencies["sqlcipher"]
    // Log
    compile rootProject.ext.dependencies["q-log"]
    // Test
    debugCompile rootProject.ext.dependencies["canary-debug"]
    releaseCompile rootProject.ext.dependencies["canary-release"]
    testCompile rootProject.ext.dependencies["canary-release"]




}